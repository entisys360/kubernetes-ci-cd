parts:

  - name: Part 1
    intro: In this part we will setup a local cluster with minikube, deploy a public image from dockerhub, customize that image, and then finally deploy it inside our local cluster.
    steps:

      - cap: Start up the Kubernetes cluster with Minikube, giving it some extra resources.
        com: minikube start --memory 7000 --cpus 3 --kubernetes-version v1.11.0

      - cap: Enable the Minikube add-ons Heapster and Ingress.
        com: minikube addons enable heapster; minikube addons enable ingress

      - cap: Let’s make a change to an HTML file in the cloned project. Open the /applications/hello-kenzan/index.html file in your favorite text editor (for example, you can use nano by running the command 'nano applications/hello-kenzan/index.html' in a separate terminal). Change some text inside one of the <p> tags. For example, change “Hello from Kenzan!” to “Hello from Me!”. Save the file. 
        com: echo ''

      - cap: Now let’s build an image, giving it a special name that points to our local cluster registry.
        com: docker build -t alex301427/hello-kenzan -f applications/hello-kenzan/Dockerfile applications/hello-kenzan

      - cap: With our proxy container up and running, we can now push our hello-kenzan image to the docker.io repository.
        com: docker push alex301427/hello-kenzan:latest

      - cap: With the image in our docker.io registry, the last thing to do is apply the manifest to create and deploy the hello-kenzan pod based on the image.
        com: kubectl apply -f applications/hello-kenzan/k8s/manual-deployment.yaml ; kubectl rollout status deployment/hello-kenzan

      - cap: Launch a web browser and view the service.
        com: minikube service hello-kenzan
